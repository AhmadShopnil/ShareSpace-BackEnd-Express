// User model
model User {
  id          String    @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // One-to-One relationship with UserProfile
  profile     UserProfile?
  
  // One-to-Many relationship with Booking
  bookings    Booking[]
}

// Flat model
model Flat {
  id                    String     @id @default(autoincrement())
  squareFeet            Int
  totalBedrooms         Int
  totalRooms            Int
  utilitiesDescription  String
  location              String
  description           String
  rent                  Int
  availability          Boolean
  advanceAmount         Int
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  // One-to-Many relationship with Booking
  bookings              Booking[]
}

// Booking model
model Booking {
  id          String    @id @default(autoincrement())
  flat        Flat      @relation(fields: [flatId], references: [id])
  flatId      String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  status      String    @default("PENDING")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// UserProfile model
model UserProfile {
  id          String    @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  bio         String?
  profession  String?
  address     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
